apiVersion: v1
kind: Template
labels:
  template: eap64-mysql-s2i-appdynamics
  xpaas: 1.3.2
metadata:
  annotations:
    description: Application template for EAP 6 MySQL applications built using S2I and deploying an AppDynamics agent.
    iconClass: icon-jboss
    tags: eap,mysql,javaee,java,database,jboss,xpaas,appdynamics
    version: 1.3.2
  name: eap64-mysql-s2i-appdynamics
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's http port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's https port.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    ports:
    - port: 8443
      targetPort: 8443
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The database server's port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mysql
  spec:
    ports:
    - port: 3306
      targetPort: 3306
    selector:
      deploymentConfig: ${APPLICATION_NAME}-mysql
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's http service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-https
  kind: Route
  metadata:
    annotations:
      description: Route for application's https service.
    labels:
      application: ${APPLICATION_NAME}
    name: secure-${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTPS}
    tls:
      termination: passthrough
    to:
      name: secure-${APPLICATION_NAME}
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        ref: ${SOURCE_REPOSITORY_REF}
        uri: ${SOURCE_REPOSITORY_URL}
      type: Git
    strategy:
      sourceStrategy:
        forcePull: true
        from:
          kind: ImageStreamTag
          name: jboss-eap64-openshift:1.4
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - github:
        secret: ${GITHUB_WEBHOOK_SECRET}
      type: GitHub
    - generic:
        secret: ${GENERIC_WEBHOOK_SECRET}
      type: Generic
    - imageChange: {}
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: DB_SERVICE_PREFIX_MAPPING
            value: ${APPLICATION_NAME}-mysql=DB
          - name: DB_JNDI
            value: ${DB_JNDI}
          - name: DB_USERNAME
            value: ${DB_USERNAME}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DB_DATABASE
            value: ${DB_DATABASE}
          - name: TX_DATABASE_PREFIX_MAPPING
            value: ${APPLICATION_NAME}-mysql=DB
          - name: DB_MIN_POOL_SIZE
            value: ${DB_MIN_POOL_SIZE}
          - name: DB_MAX_POOL_SIZE
            value: ${DB_MAX_POOL_SIZE}
          - name: DB_TX_ISOLATION
            value: ${DB_TX_ISOLATION}
          - name: OPENSHIFT_KUBE_PING_LABELS
            value: application=${APPLICATION_NAME}
          - name: OPENSHIFT_KUBE_PING_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: HTTPS_KEYSTORE_DIR
            value: /etc/eap-secret-volume
          - name: HTTPS_KEYSTORE
            value: ${HTTPS_KEYSTORE}
          - name: HTTPS_KEYSTORE_TYPE
            value: ${HTTPS_KEYSTORE_TYPE}
          - name: HTTPS_NAME
            value: ${HTTPS_NAME}
          - name: HTTPS_PASSWORD
            value: ${HTTPS_PASSWORD}
          - name: HORNETQ_CLUSTER_PASSWORD
            value: ${HORNETQ_CLUSTER_PASSWORD}
          - name: HORNETQ_QUEUES
            value: ${HORNETQ_QUEUES}
          - name: HORNETQ_TOPICS
            value: ${HORNETQ_TOPICS}
          - name: JGROUPS_ENCRYPT_SECRET
            value: ${JGROUPS_ENCRYPT_SECRET}
          - name: JGROUPS_ENCRYPT_KEYSTORE_DIR
            value: /etc/jgroups-encrypt-secret-volume
          - name: JGROUPS_ENCRYPT_KEYSTORE
            value: ${JGROUPS_ENCRYPT_KEYSTORE}
          - name: JGROUPS_ENCRYPT_NAME
            value: ${JGROUPS_ENCRYPT_NAME}
          - name: JGROUPS_ENCRYPT_PASSWORD
            value: ${JGROUPS_ENCRYPT_PASSWORD}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: TIMER_SERVICE_DATA_STORE
            value: ${APPLICATION_NAME}-mysql
          - name: AUTO_DEPLOY_EXPLODED
            value: ${AUTO_DEPLOY_EXPLODED}
          - name: JAVA_OPTS_APPEND
            value: '-javaagent:/home/jboss/source/javaagent.jar'
          - name: TZ
            value: America/New_York
          - name: APPDYNAMICS_CONTROLLER_HOST_NAME
            value: ${APPDYNAMICS_CONTROLLER_HOST_NAME}
          - name: APPDYNAMICS_CONTROLLER_PORT
            value: ${APPDYNAMICS_CONTROLLER_PORT}
          - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
            value: ${APPDYNAMICS_CONTROLLER_SSL_ENABLED}
          - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
            value: ${APPDYNAMICS_AGENT_ACCOUNT_NAME}
          - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
            value: ${APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY}
          - name: APPDYNAMICS_AGENT_APPLICATION_NAME
            value: ${SERVICE_NAME}
          - name: APPDYNAMICS_AGENT_TIER_NAME
            value: ${APPDYNAMICS_AGENT_TIER_NAME}
          - name: APPDYNAMICS_AGENT_NODE_NAME
            value: ${APPDYNAMICS_AGENT_NODE_NAME}
          image: ${APPLICATION_NAME}
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/livenessProbe.sh
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/eap/bin/readinessProbe.sh
          volumeMounts:
          - mountPath: /etc/eap-secret-volume
            name: eap-keystore-volume
            readOnly: true
          - mountPath: /etc/jgroups-encrypt-secret-volume
            name: eap-jgroups-keystore-volume
            readOnly: true
        serviceAccountName: ${SERVICE_ACCOUNT_NAME}
        terminationGracePeriodSeconds: 60
        volumes:
        - name: eap-keystore-volume
          secret:
            secretName: ${HTTPS_SECRET}
        - name: eap-jgroups-keystore-volume
          secret:
            secretName: ${JGROUPS_ENCRYPT_SECRET}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-mysql
  spec:
    replicas: 1
    selector:
      deploymentConfig: ${APPLICATION_NAME}-mysql
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}-mysql
        name: ${APPLICATION_NAME}-mysql
      spec:
        containers:
        - env:
          - name: MYSQL_USER
            value: ${DB_USERNAME}
          - name: MYSQL_PASSWORD
            value: ${DB_PASSWORD}
          - name: MYSQL_DATABASE
            value: ${DB_DATABASE}
          - name: MYSQL_LOWER_CASE_TABLE_NAMES
            value: ${MYSQL_LOWER_CASE_TABLE_NAMES}
          - name: MYSQL_MAX_CONNECTIONS
            value: ${MYSQL_MAX_CONNECTIONS}
          - name: MYSQL_FT_MIN_WORD_LEN
            value: ${MYSQL_FT_MIN_WORD_LEN}
          - name: MYSQL_FT_MAX_WORD_LEN
            value: ${MYSQL_FT_MAX_WORD_LEN}
          - name: MYSQL_AIO
            value: ${MYSQL_AIO}
          image: mysql
          imagePullPolicy: Always
          name: ${APPLICATION_NAME}-mysql
          ports:
          - containerPort: 3306
            protocol: TCP
        terminationGracePeriodSeconds: 60
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}-mysql
        from:
          kind: ImageStreamTag
          name: mysql:latest
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  name: APPLICATION_NAME
  required: true
  value: eap-app
- description: 'Custom hostname for http service route.  Leave blank for default
    hostname, e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
- description: 'Custom hostname for https service route.  Leave blank for default
    hostname, e.g.: secure-<application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTPS
- description: Git source URI for application
  name: SOURCE_REPOSITORY_URL
  required: true
  value: https://github.com/jboss-openshift/openshift-quickstarts
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  value: "1.2"
- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: todolist/todolist-jdbc
- description: Database JNDI name used by application to resolve the datasource,
    e.g. java:/jboss/datasources/mysql
  name: DB_JNDI
  value: java:jboss/datasources/MySQLDS
- description: Database name
  name: DB_DATABASE
  required: true
  value: root
- description: Queue names
  name: HORNETQ_QUEUES
- description: Topic names
  name: HORNETQ_TOPICS
- description: The name of the service account to use for the deployment.  The service
    account should be configured to allow useage of the secret(s) specified by HTTPS_SECRET
    and JGROUPS_ENCRYPT_SECRET.
  name: SERVICE_ACCOUNT_NAME
  required: true
  value: eap-service-account
- description: The name of the secret containing the keystore file
  name: HTTPS_SECRET
  value: eap-app-secret
- description: The name of the keystore file within the secret
  name: HTTPS_KEYSTORE
  value: keystore.jks
- description: The type of the keystore file (JKS or JCEKS)
  name: HTTPS_KEYSTORE_TYPE
- description: The name associated with the server certificate
  name: HTTPS_NAME
- description: The password for the keystore and certificate
  name: HTTPS_PASSWORD
- description: Sets xa-pool/min-pool-size for the configured datasource.
  name: DB_MIN_POOL_SIZE
- description: Sets xa-pool/max-pool-size for the configured datasource.
  name: DB_MAX_POOL_SIZE
- description: Sets transaction-isolation for the configured datasource.
  name: DB_TX_ISOLATION
- description: Sets how the table names are stored and compared.
  name: MYSQL_LOWER_CASE_TABLE_NAMES
- description: The maximum permitted number of simultaneous client connections.
  name: MYSQL_MAX_CONNECTIONS
- description: The minimum length of the word to be included in a FULLTEXT index.
  name: MYSQL_FT_MIN_WORD_LEN
- description: The maximum length of the word to be included in a FULLTEXT index.
  name: MYSQL_FT_MAX_WORD_LEN
- description: Controls the innodb_use_native_aio setting value if the native AIO
    is broken.
  name: MYSQL_AIO
- description: HornetQ cluster admin password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: HORNETQ_CLUSTER_PASSWORD
  required: true
- description: Database user name
  from: user[a-zA-Z0-9]{3}
  generate: expression
  name: DB_USERNAME
  required: true
- description: Database user password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: DB_PASSWORD
  required: true
- description: GitHub trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GITHUB_WEBHOOK_SECRET
  required: true
- description: Generic build trigger secret
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: GENERIC_WEBHOOK_SECRET
  required: true
- description: Namespace in which the ImageStreams for Red Hat Middleware images
    are installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in
    a different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: The name of the secret containing the keystore file
  name: JGROUPS_ENCRYPT_SECRET
  value: eap-app-secret
- description: The name of the keystore file within the secret
  name: JGROUPS_ENCRYPT_KEYSTORE
  value: jgroups.jceks
- description: The name associated with the server certificate
  name: JGROUPS_ENCRYPT_NAME
- description: The password for the keystore and certificate
  name: JGROUPS_ENCRYPT_PASSWORD
- description: JGroups cluster password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Controls whether exploded deployment content should be automatically
    deployed
  name: AUTO_DEPLOY_EXPLODED
  value: "false"
- description: AppDynamics Controller Host Name
  displayName: AppDynamics Controller Host Name
  name: APPDYNAMICS_CONTROLLER_HOST_NAME
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Controller Port
  displayName: AppDynamics Controller Port
  name: APPDYNAMICS_CONTROLLER_PORT
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Controller SSL Enabled
  displayName: AppDynamics Controller SSL Enabled
  name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
  required: true
- description: AppDynamics Agent Account Name
  displayName: AppDynamics Agent Account Name
  name: APPDYNAMICS_AGENT_ACCOUNT_NAME
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Agent Account Access Key
  displayName: AppDynamics Agent Account Access Key
  name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Agent Application Name
  displayName: AppDynamics Agent Application Name
  name: SERVICE_NAME
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Agent Tier Name
  displayName: AppDynamics Agent Tier Name
  name: APPDYNAMICS_AGENT_TIER_NAME
  from: '[a-zA-Z0-9]{10}'
  required: true
- description: AppDynamics Agent Node Name
  displayName: AppDynamics Agent Node Name
  name: APPDYNAMICS_AGENT_NODE_NAME
  from: '[a-zA-Z0-9]{10}'
  required: true

